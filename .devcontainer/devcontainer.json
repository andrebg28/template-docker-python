{
  "name": "Python e LangChain",
  "build": {
    "dockerfile": "../Dockerfile"
  },
  "remoteUser": "vscode",
  "mounts": [
    "source=${localWorkspaceFolder}/app,target=/app,type=bind"
  ],
  "settings": {
    "explorer.compactFolders": false,
    "python.pythonPath": "/env/.venv/bin/python",
    "terminal.integrated.shell.linux": "/bin/bash",
    // üêç Interpretador Python (configura√ß√£o do ambiente virtual)
    "python.defaultInterpreterPath": "${workspaceFolder}/env/venv/bin/python",
    // üìÅ Caminhos extras para an√°lise (suporte a pacotes no ambiente virtual)
    "python.analysis.extraPaths": [
      "${workspaceFolder}/env/venv/lib/site-packages"
    ],
    // ‚ú® Configura√ß√£o do Pylance (modo estrito)
    "python.analysis.typeCheckingMode": "strict",
    "python.analysis.autoImportCompletions": true,
    "python.analysis.diagnosticMode": "workspace",
    "python.analysis.useLibraryCodeForTypes": true,
    // üõ†Ô∏è Configura√ß√£o do Mypy (an√°lise est√°tica de tipos)
    "python.linting.mypyEnabled": true,
    "python.linting.mypyArgs": [
      "--config-file",
      "${workspaceFolder}/mypy.ini"
    ],
    // üõ†Ô∏è Configura√ß√£o do Linter (Flake8)
    "python.linting.enabled": true,
    "python.linting.flake8Enabled": true,
    "python.linting.flake8Args": [
      "--max-line-length=88",
      "--ignore=E203,W503"
    ],
    "python.linting.pylintEnabled": false, // Desativa pylint para evitar conflitos
    // ‚ö° Autoformata√ß√£o com Black + isort
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "ms-python.black-formatter",
    "[python]": {
      "editor.codeActionsOnSave": {
        "source.organizeImports": "explicit"
      },
      "editor.formatOnSave": true
    },
    // üîÑ Organiza√ß√£o autom√°tica de imports com isort
    "python.sortImports.args": [
      "--profile",
      "black"
    ],
    // üêû Configura√ß√£o do Debugger Python
    "debugpy.logLevel": "info",
    "python.testing.pytestEnabled": true,
    "python.testing.pytestArgs": [
      "--cov=myapp", // Medir cobertura de testes
      "--cov-report=html", // Gerar relat√≥rio HTML de cobertura
      "--junitxml=test-results.xml" // Gerar relat√≥rio JUnit para CI/CD
    ],
    // üèóÔ∏è Outras configura√ß√µes √∫teis
    "files.autoSave": "afterDelay",
    "files.exclude": {
      "**/__pycache__": true,
      "**/.pytest_cache": true,
      "**/.mypy_cache": true
    },
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
    "code-runner.runInTerminal": true,
    "code-runner.cleanPreviousOutput": true,
    "code-runner.executorMap": {
      "python": "clear ; python3 -u"
    },
    "code-runner.ignoreSelection": true,
    "workbench.iconTheme": "material-icon-theme",
    "editor.fontFamily": "'Fira Code', Consolas, 'Courier New', monospace",
    "editor.fontSize": 18,
    "window.zoomLevel": 0,
  },
  "extensions": [
    // Extens√µes Gerais
    "streetsidesoftware.code-spell-checker", // Verifica√ß√£o ortogr√°fica para c√≥digo e coment√°rios.
    "streetsidesoftware.code-spell-checker-portuguese-brazilian", // Verifica√ß√£o ortogr√°fica em portugu√™s brasileiro.
    "PKief.material-icon-theme", // Tema de √≠cones para melhorar a visualiza√ß√£o de arquivos e pastas.
    "Gruntfuggly.todo-tree", // Gerenciamento de coment√°rios `TODO`, `FIXME`, etc.
    "bierner.markdown-preview-github-styles", // Melhora a visualiza√ß√£o de arquivos Markdown com estilo GitHub.
    "eamodio.gitlens", // Melhora a integra√ß√£o com Git, mostrando hist√≥rico de altera√ß√µes e autoria do c√≥digo.
    "junhan.vscode-code-runner", // Execu√ß√£o r√°pida de c√≥digo em diferentes linguagens.
    // Python
    "ms-python.python", // Suporte oficial para Python no VS Code.
    "ms-python.debugpy", // Depura√ß√£o de c√≥digo Python.
    "ms-python.isort", // Organiza√ß√£o autom√°tica de imports.
    "ms-python.black-formatter", // Formata√ß√£o autom√°tica com Black.
    "ms-python.flake8", // An√°lise de c√≥digo Python.
    "ms-python.vscode-pylance", // An√°lise de tipos avan√ßada e sugest√µes de c√≥digo.
    "ms-python.mypy", // Integra√ß√£o com Mypy para an√°lise est√°tica de tipos.
    "KevinRose.vsc-python-indent", // Indenta√ß√£o autom√°tica no estilo Python.
    "njpwerner.autodocstring", // Gera√ß√£o autom√°tica de docstrings.
    // Produtividade
    "sourcegraph.cody-ai", // IA para sugest√µes de c√≥digo
    //FastAPI
    "tiangolo.fastapi", // Extens√£o oficial para desenvolvimento com FastAPI.
    "ms-azuretools.vscode-docker", // Suporte a Docker para rodar aplica√ß√µes FastAPI.
    "humao.rest-client", // Teste de endpoints da API diretamente no VS Code.
    //Jupyter
    "ms-toolsai.jupyter", //Suporte a notebooks Jupyter (essencial).
    "ms-toolsai.jupyter-keymap", //Atalhos de teclado para Jupyter (opcional).
    "ms-toolsai.jupyter-renderers", //Melhora a renderiza√ß√£o de gr√°ficos e markdown (opcional).
    "ms-toolsai.jupyter-themes", //Personaliza√ß√£o de temas para notebooks (opcional).
  ],
  "forwardPorts": [
    8888
  ],
  "remoteUser": "vscode",
  "postStartCommand": "/env/.venv/bin/jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root"
}